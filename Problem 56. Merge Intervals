class Solution: # add complete interval
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        intervals.sort(key = lambda x:x[0])
        res = []
        end = intervals[0][1]
        start = intervals[0][0]
        for i in range(1,len(intervals)):
            if intervals[i][0] <= end:
                end = max(intervals[i][1],end)
            else:
                res.append([start,end])
                if i+1 >= len(intervals):
                    res.append(intervals[i])
                    return res
                start = intervals[i][0]
                end = intervals[i][1]          
        res.append([start,end])
        return res
        
class Solution: # maintain last element
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        if len(intervals) == 0: return intervals
        intervals.sort(key=lambda x: x[0])
        result = []
        result.append(intervals[0])
        for i in range(1, len(intervals)):
            last = result[-1]
            if last[1] >= intervals[i][0]:
                result[-1] = [last[0], max(last[1], intervals[i][1])]
            else:
                result.append(intervals[i])
        return result
