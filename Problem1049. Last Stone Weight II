class Solution:
    def lastStoneWeightII(self, stones: List[int]) -> int:
        if len(stones)<=1:
            return stones[0]
        
        dp = [0]*15001
        s = sum(stones)
        target = s//2
        for i in range(len(stones)):
            for j in range(target,stones[i]-1,-1):
                dp[j] = max(dp[j],dp[j-stones[i]]+stones[i])
                
        return s - dp[target]-dp[target]
  Find
  class Solution:
    def lastStoneWeightII(self, stones: List[int]) -> int:
        sum_ = sum(stones);
        target = sum_ // 2;
        
        comb = {0};
        for x in stones:
            comb = {z + y for y in comb for z in [0, x]
                    if y + z <= target};
            
            if target in comb: return sum_ - 2*target;
            
        return sum_ - 2 * max(comb);
