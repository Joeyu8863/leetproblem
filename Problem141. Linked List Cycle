class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        slow = fast = head

        
        while fast and fast.next:

            fast = fast.next.next
            slow = slow.next
            if slow == fast:
                return True
        return False
        
        
 Find
 class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        d = set()
        current = head
        while current:
            if current in d:
                return True
            else:
                d.add(current)
            current = current.next
        return False
