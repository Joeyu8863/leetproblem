class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack = []
        
        for i in tokens:
            if i not in {"+","-","*","/"}:
                stack.append(i)
            else:
                firstnum,secondnum = stack.pop(),stack.pop()
                stack.append(int(eval(f'{secondnum} {i} {firstnum}')))
                             
        return int(stack.pop())
        
        
# time O(n)
# space O(n)

class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack = collections.deque()
        
        for token in tokens:
            if token == "+":
                stack.append(stack.pop() + stack.pop())
            elif token == "-":
                x, y = stack.pop(), stack.pop()
                stack.append(y - x)
            elif token == "/":
                x, y = stack.pop(), stack.pop()
                stack.append(int(y / x))
            elif token == "*":
                stack.append(stack.pop() * stack.pop())
            else:
                stack.append(int(token))
        
        return stack[0]
