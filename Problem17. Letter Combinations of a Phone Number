class Solution:
    def __init__(self):
        self.answers: List[str] = []
        self.answer: str = ''
        self.letter_map = {
            '2': 'abc',
            '3': 'def',
            '4': 'ghi',
            '5': 'jkl',
            '6': 'mno',
            '7': 'pqrs',
            '8': 'tuv',
            '9': 'wxyz'
        }
    def backtrack(self,digits,start):
        if len(digits) == start:
            self.answers.append(self.answer)
            return
        letters = self.letter_map[digits[start]]
        for i in letters:
            self.answer += i
            self.backtrack(digits,start+1)
            self.answer = self.answer[:-1]
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return None
        self.backtrack(digits,0)
        return self.answers
