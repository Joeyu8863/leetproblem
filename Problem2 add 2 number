
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        op1 = 0
        op2 = 0
        digis = 1
        while l1:
            op1 += l1.val*digis
            l1 = l1.next
            digis = digis*10
        digis = 1   
        while l2:
            op2 += l2.val*digis
            l2 = l2.next
            digis = digis*10   
            
        result = op1 + op2
        head = cur = ListNode(0)
        digis = 10
        if result != 0:
            while result > 0:
                cur.next = ListNode(result%digis)
                result -= result%digis
                cur = cur.next
                result = result / 10
                result =  round(result)
        else:
            cur.next = ListNode(0)

        return head.next

Find:
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        
        carry = 0
        head = node = ListNode('#')
        while l1 or l2:
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0
            carry, rem = divmod(carry + val1 + val2, 10)
            node.next = ListNode(rem)
            node = node.next
            l1 = l1.next if l1 else None
            l2 = l2.next if l2 else None
        if carry:
            node.next = ListNode(carry)
        return head.next
    
        c1 = l1
        c2 = l2
        temp = 0
        
        while c1.next and c2: 
            total = c1.val + c2.val + temp
            c1.val = int(total % 10)
            temp = int(total / 10)
            c1, c2 = c1.next, c2.next
        
        # l1 is longer
        while c1.next:
            total = c1.val + temp
            c1.val = int(total % 10)
            temp = int(total / 10)
            c1 = c1.next
        
        # l1 & l2 are equal length
        if c2:
            total = c1.val + c2.val + temp
            c1.val = int(total % 10)
            temp = int(total / 10)
        
        # l2 is longer
        if c2 and c2.next:
            c1.next = c2.next
            while c1.next:
                c1 = c1.next
                total = temp + c1.val
                c1.val = int(total % 10)
                temp = int(total / 10)
            
        # END
        # Second last value of long l1
        if c2 == None:
            total = c1.val + temp
            c1.val = int(total % 10)
            temp = int(total / 10)
        
        # Add to end of l1
        if temp != 0:
            final.val = temp
            final.next = None
            c1.next = final
            
        return l1
