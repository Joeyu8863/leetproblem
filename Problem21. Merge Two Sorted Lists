python
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        flist = head = ListNode()

            
        while list1 and list2:               
            if list1.val < list2.val:
                flist.next = list1
                flist = flist.next
                list1 = list1.next
                
            else:
                flist.next = list2
                flist = flist.next
                list2 = list2.next
                
        if list1 or list2:
            flist.next = list1 if list1 else list2
        return head.next

   c++         
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* result = new ListNode();
        ListNode*cur = result;
        while (list1!=NULL && list2!=NULL)
        {
            if (list1->val < list2->val)
            {
                cur->next = list1;
                list1 = list1->next;
            }
            else
            {
                cur->next = list2;

                list2 = list2->next;
            }
            cur = cur->next;
        }
        
        if(list1) cur->next = list1;
        if(list2) cur->next = list2;
        return result->next;
    }
};
