class Solution: n^2
    def integerBreak(self, n: int) -> int:
        dp = [0]*(n+1)
        dp[2] = 1
        for i in range(3,n+1):
            for j in range(1,i-1):
                dp[i] = max(dp[i],max((i-j)*j,dp[i-j]*j))
                
        return dp[-1]
        
        
  class Solution: n
    def integerBreak(self, n: int) -> int:
        if (n == 2 or n == 3):
            return (n - 1)
   
       # Keep removing parts of size 3 while n is greater than 4
        res = 1
        while (n > 4):

            n -= 3
            res *= 3 # Keep multiplying 3 to res

        return (n * res)
