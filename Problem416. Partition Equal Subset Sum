class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        target = sum(nums)
        if target%2 == 1:
            return False
        target //= 2
        dp = [0]*10001
        
        for i in range(len(nums)):
            for j in range(target,nums[i]-1,-1):
                dp[j] = max(dp[j],dp[j-nums[i]]+nums[i])
        if dp[target] == target:
            return True
        else: return False
        
        
        
Find
class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        s=1
        sm=sum(nums)
        if sm%2:
            return False
        for n in nums:
            s|=s<<n
        return s&(1<<(sm//2))
