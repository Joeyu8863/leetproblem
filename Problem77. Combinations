class Solution:
    def combine(self, n: int, k: int) -> List[List[int]]:
        res = []
        path = []
        def backtrack(n,k,start):
            if len(path) == k:
                res.append(path[:])
                return
            for i in range(start,n-(k-len(path))+2):在集合n中至多要从该起始位置 : n - (k - path.size()) + 1，开始遍历
                path.append(i)
                backtrack(n,k,i+1)
                path.pop()
        backtrack(n,k,1)
        return res
